// ***************the Flex AC_OETags.js Code Template******************************
// Flash Player Version Detection - Rev 1.5
// Detect Client Browser type
// Copyright(c) 2005-2006 Adobe Macromedia Software, LLC. All rights reserved.
var isIE = (navigator.appVersion.indexOf("MSIE") !== -1) ? true : false;
var isWin = (navigator.appVersion.toLowerCase().indexOf("win") !== -1) ? true : false;
var isOpera = (navigator.userAgent.indexOf("Opera") !== -1) ? true : false;

function ControlVersion() {
    var version;
    var axo;
    var e;

    // NOTE : new ActiveXObject(strFoo) throws an exception if strFoo isn't in the registry

    try {
        // version will be set for 7.X or greater players
        axo = new ActiveXObject("ShockwaveFlash.ShockwaveFlash.7");
        version = axo.GetVariable("$version");
    } catch (e) {
    }

    if (!version) {
        try {
            // version will be set for 6.X players only
            axo = new ActiveXObject("ShockwaveFlash.ShockwaveFlash.6");

            // installed player is some revision of 6.0
            // GetVariable("$version") crashes for versions 6.0.22 through 6.0.29,
            // so we have to be careful. 

            // default to the first public version
            version = "WIN 6,0,21,0";

            // throws if AllowScripAccess does not exist (introduced in 6.0r47)		
            axo.AllowScriptAccess = "always";

            // safe to call for 6.0r47 or greater
            version = axo.GetVariable("$version");

        } catch (e) {
        }
    }

    if (!version) {
        try {
            // version will be set for 4.X or 5.X player
            axo = new ActiveXObject("ShockwaveFlash.ShockwaveFlash.3");
            version = axo.GetVariable("$version");
        } catch (e) {
        }
    }

    if (!version) {
        try {
            // version will be set for 3.X player
            axo = new ActiveXObject("ShockwaveFlash.ShockwaveFlash.3");
            version = "WIN 3,0,18,0";
        } catch (e) {
        }
    }

    if (!version) {
        try {
            // version will be set for 2.X player
            axo = new ActiveXObject("ShockwaveFlash.ShockwaveFlash");
            version = "WIN 2,0,0,11";
        } catch (e) {
            version = -1;
        }
    }

    return version;
}

// JavaScript helper required to detect Flash Player PlugIn version information
function GetSwfVer() {
    // NS/Opera version >= 3 check for Flash plugin in plugin array
    var flashVer = -1;

    if (navigator.plugins !== null && navigator.plugins.length > 0) {
        if (navigator.plugins["Shockwave Flash 2.0"] || navigator.plugins["Shockwave Flash"]) {
            var swVer2 = navigator.plugins["Shockwave Flash 2.0"] ? " 2.0" : "";
            var flashDescription = navigator.plugins["Shockwave Flash" + swVer2].description;
            var descArray = flashDescription.split(" ");
            var tempArrayMajor = descArray[2].split(".");
            var versionMajor = tempArrayMajor[0];
            var versionMinor = tempArrayMajor[1];
            if (descArray[3] !== "") {
                tempArrayMinor = descArray[3].split("r");
            } else {
                tempArrayMinor = descArray[4].split("r");
            }
            var versionRevision = tempArrayMinor[1] > 0 ? tempArrayMinor[1] : 0;
            flashVer = versionMajor + "." + versionMinor + "." + versionRevision;
        }
    }
        // MSN/WebTV 2.6 supports Flash 4
    else if (navigator.userAgent.toLowerCase().indexOf("webtv/2.6") !== -1) flashVer = 4;
        // WebTV 2.5 supports Flash 3
    else if (navigator.userAgent.toLowerCase().indexOf("webtv/2.5") !== -1) flashVer = 3;
        // older WebTV supports Flash 2
    else if (navigator.userAgent.toLowerCase().indexOf("webtv") !== -1) flashVer = 2;
    else if (isIE && isWin && !isOpera) {
        flashVer = ControlVersion();
    }
    return flashVer;
}

// When called with reqMajorVer, reqMinorVer, reqRevision returns true if that version or greater is available
function DetectFlashVer(reqMajorVer, reqMinorVer, reqRevision) {
    versionStr = GetSwfVer();
    if (versionStr === -1) {
        return false;
    } else if (versionStr !== 0) {
        if (isIE && isWin && !isOpera) {
            // Given "WIN 2,0,0,11"
            tempArray = versionStr.split(" ");  // ["WIN", "2,0,0,11"]
            tempString = tempArray[1];  // "2,0,0,11"
            versionArray = tempString.split(",");   // ['2', '0', '0', '11']
        } else {
            versionArray = versionStr.split(".");
        }
        var versionMajor = versionArray[0];
        var versionMinor = versionArray[1];
        var versionRevision = versionArray[2];

        // is the major.revision >= requested major.revision AND the minor version >= requested minor
        if (versionMajor > parseFloat(reqMajorVer)) {
            return true;
        } else if (versionMajor === parseFloat(reqMajorVer)) {
            if (versionMinor > parseFloat(reqMinorVer))
                return true;
            else if (versionMinor === parseFloat(reqMinorVer)) {
                if (versionRevision >= parseFloat(reqRevision))
                    return true;
            }
        }
        return false;
    }
}

function AC_AddExtension(src, ext) {
    if (src.indexOf('?') !== -1)
        return src.replace(/\?/, ext + '?');
    else
        return src + ext;
}

function AC_Generateobj(objAttrs, params, embedAttrs) {
    var str = '';
    if (isIE && isWin && !isOpera) {
        str += '<object ';
        for (var obj in objAttrs)
            str += obj + '="' + objAttrs[obj] + '" ';
        for (var par in params)
            str += '><param name="' + par + '" value="' + params[par] + '" /> ';
        str += '></object>';
    } else {
        str += '<embed ';
        for (var emb in embedAttrs)
            str += emb + '="' + embedAttrs[emb] + '" ';
        str += '> </embed>';
    }

    document.write(str);
}

function AC_FL_RunContent() {
    var ret =
      AC_GetArgs
      (arguments, ".swf", "movie", "clsid:d27cdb6e-ae6d-11cf-96b8-444553540000"
       , "application/x-shockwave-flash"
      );
    AC_Generateobj(ret.objAttrs, ret.params, ret.embedAttrs);
}

function AC_GetArgs(args, ext, srcParamName, classid, mimeType) {
    var ret = {};
    ret.embedAttrs = {};
    ret.params = {};
    ret.objAttrs = {};
    for (var i = 0; i < args.length; i = i + 2) {
        var currArg = args[i].toLowerCase();

        switch (currArg) {
            case "classid":
                break;
            case "pluginspage":
                ret.embedAttrs[args[i]] = args[i + 1];
                break;
            case "src":
            case "movie":
                args[i + 1] = AC_AddExtension(args[i + 1], ext);
                ret.embedAttrs.src = args[i + 1];
                ret.params[srcParamName] = args[i + 1];
                break;
            case "onafterupdate":
            case "onbeforeupdate":
            case "onblur":
            case "oncellchange":
            case "onclick":
            case "ondblClick":
            case "ondrag":
            case "ondragend":
            case "ondragenter":
            case "ondragleave":
            case "ondragover":
            case "ondrop":
            case "onfinish":
            case "onfocus":
            case "onhelp":
            case "onmousedown":
            case "onmouseup":
            case "onmouseover":
            case "onmousemove":
            case "onmouseout":
            case "onkeypress":
            case "onkeydown":
            case "onkeyup":
            case "onload":
            case "onlosecapture":
            case "onpropertychange":
            case "onreadystatechange":
            case "onrowsdelete":
            case "onrowenter":
            case "onrowexit":
            case "onrowsinserted":
            case "onstart":
            case "onscroll":
            case "onbeforeeditfocus":
            case "onactivate":
            case "onbeforedeactivate":
            case "ondeactivate":
            case "type":
            case "codebase":
                ret.objAttrs[args[i]] = args[i + 1];
                break;
            case "id":
            case "width":
            case "height":
            case "align":
            case "vspace":
            case "hspace":
            case "class":
            case "title":
            case "accesskey":
            case "name":
            case "tabindex":
                ret.embedAttrs[args[i]] = ret.objAttrs[args[i]] = args[i + 1];
                break;
            default:
                ret.embedAttrs[args[i]] = ret.params[args[i]] = args[i + 1];
        }
    }
    ret.objAttrs.classid = classid;
    if (mimeType) ret.embedAttrs.type = mimeType;
    return ret;
}


// ***************the Flex history.js Code Template******************************
// $Revision: 1.49 $
// Vars
Vars = function (qStr) {
    this.numVars = 0;
    if (qStr !== null) {
        var nameValue, name;
        var pairs = qStr.split('&');
        var pairLen = pairs.length;
        for (var i = 0; i < pairLen; i++) {
            var pair = pairs[i];
            if ((pair.indexOf('=') !== -1) && (pair.length > 3)) {
                nameValue = pair.split('=');
                name = nameValue[0];
                var value = nameValue[1];
                if (this[name] === null && name.length > 0 && value.length > 0) {
                    this[name] = value;
                    this.numVars++;
                }
            }
        }
    }
};

Vars.prototype.toString = function (pre) {
    var result = '';
    if (pre === null) {
        pre = '';
    }
    for (var i in this) {
        if (this[i] !== null && typeof (this[i]) !== 'object' && typeof (this[i]) !== 'function' && i !== 'numVars') {
            result += pre + i + '=' + this[i] + '&';
        }
    }
    if (result.length > 0) result = result.substr(0, result.length - 1);
    return result;
};

function getSearch(wRef) {
    var searchStr = '';
    if (wRef.location.search.length > 1) {
        searchStr = wRef.location.search;
        searchStr = searchStr.substring(1, searchStr.length);
    }
    return searchStr;
}
var lc_id = Math.floor(Math.random() * 100000).toString(16);
if (this !== top) {
    top.Vars = Vars;
    top.getSearch = getSearch;
    top.lc_id = lc_id;
}

/**************************************************************************
*   jQuery.flash Extension
***************************************************************************
*/
(function ($) {

    /*
    * Available parameters and attributes are:
    * id, class, width, height, src, bgcolor, quality, allowscriptaccess, allowfullscreen, flashvars, wmode and noFlashTip(callback function or string)
    */
    $.fn.flash = function (opt) {
        opt = $.extend({ version: '6.0.65' }, opt);
        var ieAvailAttrs = ['id', 'class', 'width', 'height', 'classid', 'codebase'],
            ieAvailParams = ['movie', 'bgcolor', 'play', 'loop', 'quality', 'align', 'allowscriptaccess', 'allowfullscreen', 'flashvars', 'wmode'],
            ffAvailAttrs = ['id', 'name', 'class', 'width', 'height', 'src', 'pluginspage', 'align', 'bgcolor', 'play', 'loop', 'quality', 'wmode', 'type', 'flashvars', 'allowscriptaccess'],
            hasInstalled = DetectFlashVer.apply(null, opt.version.split('.')),
            ieBroswer = isIE && isWin && !isOpera,
            swf, attrs, ieParams,
            defaults = {
                classid: 'clsid:D27CDB6E-AE6D-11cf-96B8-444553540000',
                codebase: '//download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab',
                align: 'middle',
                play: true,
                loop: false,
                quality: 'high',
                width: '100%',
                height: '100%',
                wmode: 'transparent',
                type: 'application/x-shockwave-flash',
                allowscriptaccess: 'sameDomain',
                pluginspace: '//get.adobe.com/flashplayer'
            };

        // Finally, we're on to the REAL action.
        return $(this).each(function () {
            if (!hasInstalled) {
                if (opt && opt.noFlashTip) {
                    if (typeof opt.noFlashTip === 'String') $(this).html(opt.noFlashTip);
                    else if ($.isFunction(opt.noFlashTip)) opt.noFlashTip.call(this);
                }
                return this;
            }

            var e = $(this).children('a'),
                s = $.extend(e.length > 0 ? {
                    'id': e.attr('id'),
                    'class': e.attr('class'),
                    'width': e.width(),
                    'height': e.height(),
                    'src': e.attr('href')
                } : {}, opt);

            if (s.id) s.name = s.id;
            if (s.src) s.movie = s.src;
            if (s.flashvars) s.flashvars = unescape($.param(s.flashvars));

            if (ieBroswer) {
                attrs = $.util.copy(ieAvailAttrs, defaults, s);
                ieParams = $.util.copy(ieAvailParams, defaults, s);
                swf = $('<div />', attrs); //can't use object as IE will update the html
                $.each(ieParams, function (key, value) {
                    swf.append($('<param />').attr({ 'name': key, 'value': value }));
                });
                swf = swf[0].outerHTML.replace(/(<|\/)(div)(\s|>)/gi, '$1object$3');
            } else {
                attrs = $.util.copy(ffAvailAttrs, defaults, s);
                swf = $('<embed />', attrs)[0].outerHTML;
            }

            $(this).html(swf);
            return this;
        });
    };

})(jQuery);

